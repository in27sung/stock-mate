<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.stockm8.mapper.UserMapper">

    <!-- UserResultMap 정의 -->
    <resultMap id="userResultMap" type="com.stockm8.domain.vo.UserVO">
        <result property="userId" column="user_id" />
        <result property="email" column="email" />
        <result property="password" column="password" />
        <result property="userName" column="user_name" />
        <result property="userRole" column="user_role" />
        <result property="businessId" column="business_id" />
        <result property="telNumber" column="tel_number" />
        <result property="createdBy" column="created_by" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="userStatus" column="user_status" javaType="com.stockm8.domain.enums.UserStatus"/>
        <result property="isDeleted" column="is_deleted" />
    </resultMap>

    <!-- 회원가입 -->
    <insert id="insertUser"
        parameterType="com.stockm8.domain.vo.UserVO" 
        useGeneratedKeys="true"
        keyProperty="userId">
        INSERT INTO users (
            email,
            password,
            user_name,
            user_role,
            tel_number,
            created_at,
            user_status,
            is_deleted
        )
        VALUES (
            #{email},
            #{password},
            #{userName},
            #{userRole},
            #{telNumber},
            NOW(),
            'PENDING',
            0
        )
    </insert>

    <!-- 로그인 체크 -->
    <select id="loginCheck"
        parameterType="com.stockm8.domain.vo.UserVO" 
        resultMap="userResultMap">
        SELECT
            user_id,
            email,
            password,
            user_name,
            user_role,
            business_id,
            user_status,
            is_deleted
        FROM users
        WHERE email = #{email} AND password = #{password}
    </select>

    <!-- 회원정보 조회 -->
    <select id="getUser" 
        parameterType="long"
        resultMap="userResultMap">
        SELECT * 
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 회원정보 수정 -->
    <update id="updateUser">
        UPDATE users
        SET 
            user_name = #{userName},
            tel_number = #{telNumber},
            updated_at = NOW()
        WHERE 
            user_id = #{userId} 
            AND password = #{password}
    </update>

    <!-- 사용자의 businessId 수정 -->
    <update id="updateUserBusinessId" 
        parameterType="map">
        UPDATE users
        SET 
            business_id = #{businessId}
        WHERE 
            user_id = #{userId} 
            AND business_id IS NULL
    </update>

    <!-- 회원정보 삭제 -->
    <delete id="deleteUser">
        DELETE FROM users
        WHERE 
            user_id = #{userId} 
            AND password = #{password}
    </delete>

    <!-- 회원 목록 조회 -->
    <select id="userList" 
        resultMap="userResultMap">
        SELECT * 
        FROM users
    </select>

    <!-- 유저 정보를 user_id로 조회 -->
    <select id="getUserById" 
        parameterType="long"
        resultMap="userResultMap">
        SELECT
            user_id,
            email,
            password,
            user_name,
            user_role,
            business_id,
            tel_number,
            created_at,
            updated_at,
            created_by,
            user_status,
            is_deleted
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 유저의 삭제 여부 확인 -->
    <select id="getIsDeleted" 
        parameterType="long" 
        resultType="int">
        SELECT is_deleted
        FROM users
        WHERE user_id = #{userId}
    </select>

</mapper>
