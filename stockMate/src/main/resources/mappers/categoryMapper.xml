<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.stockm8.mapper.CategoryMapper">

    <!-- ResultMap 정의 -->
    <resultMap id="categoryResultMap" type="com.stockm8.domain.vo.CategoryVO">
        <id property="categoryId" column="category_id" />
        <result property="parentId" column="parent_id" />
        <result property="businessId" column="business_id" />
        <result property="categoryName" column="category_name" />
        <result property="level" column="level" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="isDeleted" column="is_deleted" />
    </resultMap>

    <!-- 카테고리 등록 -->
    <insert id="insertCategory" parameterType="com.stockm8.domain.vo.CategoryVO">
        INSERT INTO test_categories (
            parent_id,
            business_id,
            category_name,
            level,
            created_at,
            updated_at,
            is_deleted
        )
        VALUES (
            #{parentId},
            #{businessId},
            #{categoryName},
            #{level},
            NOW(),
            NOW(),
            0
        )
    </insert>

    <!-- 카테고리 목록 조회 (삭제되지 않은 카테고리만 조회) -->
    <select id="selectAllCategories" resultMap="categoryResultMap">
        SELECT
            category_id,
            parent_id,
            business_id,
            category_name,
            level,
            created_at,
            updated_at,
            is_deleted
        FROM test_categories
        WHERE is_deleted = 0
        ORDER BY level ASC, category_name ASC
    </select>

    <!-- 특정 사업자 소속의 카테고리 목록 조회 (삭제되지 않은 카테고리만 조회) -->
    <select id="selectCategoriesByBusinessId" parameterType="int" resultMap="categoryResultMap">
        SELECT
            category_id,
            parent_id,
            business_id,
            category_name,
            level,
            created_at,
            updated_at,
            is_deleted
        FROM test_categories
        WHERE business_id = #{businessId}
          AND is_deleted = 0
        ORDER BY level ASC, category_name ASC
    </select>

    <!-- 카테고리ID로 카테고리명 조회 -->
    <select id="selectCategoryNameById" parameterType="int" resultType="String">
        SELECT category_name
        FROM test_categories
        WHERE category_id = #{categoryId} AND is_deleted = 0
    </select>

    <!-- 카테고리 존재 여부 확인 -->
    <select id="existsById" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM test_categories
        WHERE category_id = #{categoryId}
          AND business_id = #{businessId}
          AND is_deleted = 0
    </select>

    <!-- 카테고리 수정 -->
    <update id="updateCategory" parameterType="com.stockm8.domain.vo.CategoryVO">
        UPDATE test_categories
        SET
            parent_id = #{parentId},
            category_name = #{categoryName},
            level = #{level},
            updated_at = NOW()
        WHERE category_id = #{categoryId} AND is_deleted = 0
    </update>

    <!-- 카테고리 논리 삭제 처리 (is_deleted = 1로 설정) -->
    <update id="deleteCategory" parameterType="int">
        UPDATE test_categories
        SET is_deleted = 1, updated_at = NOW()
        WHERE category_id = #{categoryId}
    </update>

    <!-- 카테고리 ID로 조회 (삭제되지 않은 카테고리만 조회) -->
    <select id="selectCategoryById" parameterType="int" resultMap="categoryResultMap">
        SELECT
            category_id,
            parent_id,
            business_id,
            category_name,
            level,
            created_at,
            updated_at,
            is_deleted
        FROM test_categories
        WHERE category_id = #{categoryId} AND is_deleted = 0
    </select>
    
    <!-- 부모 카테고리 조회 -->
<select id="selectParentCategories" resultMap="categoryResultMap">
    SELECT
        category_id,
        parent_id,
        business_id,
        category_name,
        level,
        created_at,
        updated_at,
        is_deleted
    FROM test_categories
    WHERE level = 1  <!-- 부모 카테고리는 level이 1 -->
      AND is_deleted = 0
    ORDER BY category_name ASC
</select>

</mapper>