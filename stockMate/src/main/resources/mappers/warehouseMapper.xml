<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.stockm8.mapper.WarehouseMapper">

	<!-- ResultMap 정의 -->
	<resultMap id="warehouseResultMap" type="com.stockm8.domain.dto.WarehouseDetailDTO">
	    <id property="warehouseId" column="warehouse_id" />
	    <result property="warehouseName" column="warehouse_name" />
	    <result property="warehouseRegion" column="warehouse_region" />
	    <result property="warehouseLocation" column="warehouse_location" />
	    <result property="businessId" column="business_id" />
	    <result property="managerId" column="manager_id" />
	    <result property="createdAt" column="created_at" />
	    <result property="updatedAt" column="updated_at" />
	    <result property="warehouseCapacity" column="warehouse_capacity" />
	    <result property="warehouseDescription" column="warehouse_description" />
	    <result property="warehouseStatus" column="warehouse_status" />
	    <result property="businessName" column="business_name" />
	    <result property="managerName" column="manager_name" />
	</resultMap>


    <!-- 창고 등록 -->
    <insert id="insertWarehouse" parameterType="com.stockm8.domain.vo.WarehouseVO">
		INSERT INTO warehouses (
		    warehouse_name, 
		    warehouse_location, 
		    business_id, 
		    manager_id, 
		    created_at, 
		    updated_at, 
		    is_deleted,
		    warehouse_description,
		    warehouse_capacity,
		    warehouse_status,
		    warehouse_region
		)
		VALUES (
		    #{warehouseName}, 
		    #{warehouseLocation}, 
		    #{businessId}, 
		    #{managerId}, 
		    CURRENT_TIMESTAMP, 
		    CURRENT_TIMESTAMP, 
		    0,
		    #{warehouseDescription},
		    #{warehouseCapacity},
		    'ACTIVE',
		    #{warehouseRegion}
		);
    </insert>

	<!-- 창고 상세 조회 -->
	<select id="selectWarehouseDetailById" parameterType="int" resultMap="warehouseResultMap">
	    SELECT 
	        w.warehouse_id,
	        w.warehouse_name,
	        w.warehouse_capacity,
	        w.warehouse_region,
	        w.warehouse_location,
	        w.created_at,
	        w.updated_at,
	        w.warehouse_description,
	        w.warehouse_status,
	        w.business_id,
	        b.business_name, 
	        w.manager_id,
	        u.user_name
	    FROM warehouses w
	    LEFT JOIN businesses b ON w.business_id = b.business_id
	    LEFT JOIN users u ON w.manager_id = u.user_id
	    WHERE w.warehouse_id = #{warehouseId} AND w.is_deleted = 0;
	</select>


    <!-- 창고 존재 여부 확인 -->
    <select id="existsById" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM warehouses
        WHERE warehouse_id = #{warehouseId} AND
              business_id = #{businessId};
    </select>
    
    <!-- 비즈니스 ID로 창고 리스트 조회 -->
    <select id="selectWarehousesByBusinessId" parameterType="int" resultType="com.stockm8.domain.vo.WarehouseVO">
        SELECT 
            warehouse_id,
            warehouse_name,
            warehouse_location,
            warehouse_region,
            warehouse_capacity,
            warehouse_status,
            created_at,
            updated_at
        FROM warehouses
        WHERE business_id = #{businessId} AND is_deleted = 0;
    </select>

	<!-- 창고 정보 수정 -->
	<update id="updateWarehouse"
		parameterType="com.stockm8.domain.vo.WarehouseVO">
		UPDATE test_warehouses
		SET warehouse_name =
		#{warehouseName},
		location = #{location},
		business_id = #{businessId},
		manager_id =
		#{managerId}
		WHERE warehouse_id = #{warehouseId}
	</update>

	<!-- 창고 삭제 -->
	<delete id="deleteWarehouseById" parameterType="int">
		DELETE FROM
		test_warehouses WHERE warehouse_id = #{warehouseId}
	</delete>
	
</mapper>

